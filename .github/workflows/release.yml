name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build all packages
        run: pnpm build

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update package versions
        run: |
          # Update version in all package.json files
          pnpm recursive exec -- npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## 🚀 Release v${{ steps.version.outputs.version }}

            ### 📦 Published Packages
            - `@fieldbooks/lib@${{ steps.version.outputs.version }}`
            - `@fieldbooks/cli@${{ steps.version.outputs.version }}`
            - `@fieldbooks/mcp@${{ steps.version.outputs.version }}`

            ### 📋 Changelog
            See [CHANGELOG.md](./CHANGELOG.md) for detailed changes.

            ### 🛠️ Installation
            ```bash
            # Install CLI globally
            npm install -g @fieldbooks/cli

            # Or use in your project
            npm install @fieldbooks/lib
            ```
          draft: false
          prerelease: false

      - name: Publish to npm
        run: |
          # Configure npm
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

          # Publish packages
          pnpm -r publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
